/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 * Recursive solution to check left & right
 * Time complexity: O(n) since we are exploring all nodes
 * Space compexity: O(1)
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        
        if (root == null) return true;
        
        return (check(root.left, root.right));
        
    }
    
    public boolean check(TreeNode left, TreeNode right) {
        
        if (left == null && right == null) return true;
        
        if (left == null || right == null ||
            left.val != right.val) return false;
        
        return check(left.left, right.right) && check(left.right, right.left);
        
    }
}
